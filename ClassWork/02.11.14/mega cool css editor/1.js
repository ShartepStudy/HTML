// массив, содержащий основные цвета 
var colors=new Array("Black","Navy","Gray","Blue","Silver","Aqua","White","Green","Red","Lime","Fuchsia","Teal","Maroon","Yellow","Purple","Olive");

// функция выводит на экран таблицу цветов
function setTableColor(){
	// TABLE - строка, в которую формируется таблица
	// открываем тег таблицы
	var TABLE="<table border='1'>";
	
	// цикл перебирает цвета в таблице
	for(var i=0;i<colors.length;i++){
		// в таблице 4 строки (тег tr открывается в самом начале, а потом через каждые четыре ячейки закрывается и открывается заново
		if(i%4==0)TABLE+="<tr>";
		// тег td содержит обработчик отлавливающий нажатие на ячейке кнопкой мышки, цвет фона и название этого цвета в качестве текста
		TABLE+="<td onclick='getColor();' style='background-color:"+colors[i]+"'>"+colors[i]+"</td>";
		if(i%4==3)TABLE+="</tr>";		
	}
	// закрываем тег таблицы
	TABLE+="</table>";
	// укладываем сформированную таблицу в DIV, заранее расположенный на странице под идентификатором D
	D.innerHTML=TABLE;
}
// обработчик нажатия нажатия для ячейки получающий её конкретный цвет и записывающий её название
// в текстовое поле с активной радио-кнопкой рядом
function getColor(){
	//если активна радиокнопка "Цвет фона"
	if(F.R[0].checked==true)
		// вписываем название цветв в текстовое поле text1
		F.text1.value=event.srcElement.outerText;
	//если активна радиокнопка "Цвет текста"
	else if(F.R[1].checked==true)
		// вписываем название цветв в текстовое поле text2
		F.text2.value=event.srcElement.outerText;
	//если активна радиокнопка "Цвет рамки"
	else 
		// вписываем название цветв в текстовое поле text3
		F.text3.value=event.srcElement.outerText;
}
// функция вызывается для анализа переменных, переданных через GET
// вызов в скрипте той страницы, на которую перенаправляется скрипт
function onSub(){

	//через объект location получаем строку, начинающуюся со знака вопроса (отправленную методом Get)
	// Эта строка для нас выглядит так: ?text1=Black&text2=White&text3=Purple&R=on
	// Мы делим её с помощью split, используя в качестве сепаратора символ "=", оставляя только четыре полученных строки
	// В результате получаем массив строк temp, где
	// 0 элемент - "?text1"  1 элемент -  "Black&text2"  2 элемент - "White&text3" 3 элемент - "Purple&R=on"
	// нас интересуют все, кроме нулевого
	var temp=location.search.split('=',4);
	// создаем новый массив уже непосредственно для цветов
	var texts=new Array();
	
	// начиная с первого элемента, делим каждую строку по сепаратору - "&"
	for(var i=0;i<temp.length-1;i++){
		//temp[i+1].split('&',1) - отделение цвета от части с &, фактически разбиение на массив из двух элементов
		//temp[i+1].split('&',1)[0] - получение цвета, который лежит в нулевом элементе полученного подмассива
		//texts.push - непосредственное добавление выделенного цвета в массив
		texts.push(temp[i+1].split('&',1)[0]);
	}
	// Итог цикла - массив texts из трёх элементов 0 - цвет фона(содержимое поля text1), 1 - цвет текста(содержимое поля text2), 2 - цвет рамки(содержимое поля text3), 

	// если хотя бы одно из полей оказалось пустым - выдаем сообщение об ошибке и тормозимся
	if(texts[0]==""||texts[1]==""||texts[2]==""){
		alert("Неверный ввод данных");
		return;			
	}
	// если все поля заполнены - прописываем соответствующие стили для абзаца
	// с идентификатором p1, созданным заранее
	p1.style.border="3px solid "+texts[2];	
	p1.style.backgroundColor=texts[0];
	p1.style.color=texts[1];	
}